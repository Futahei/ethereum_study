eth.getBlook(0)
eth.nonce
a
eth.getBlock(0)
miner.start(1)
miner.stop()
miner.start(2)
miner.getHashrate()
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
miner.stop()
eth.accounts
eth.coinbase
miner.start()
eth.mining
eth.hashrate
[A[Beth.hashrate
;
eth.hashrate
eth.hashrate;
eth.hashrate
eth.blocknumber
eth.blockNumber
eth.hashrate
eth.blockNumber
miner.stop()
eth.hashrate
eth.mining
eth.getBlock(100)
eth.coinbase
eth.getBlock(858)
eth.blockNumber[3~
;
eth.blockNumber
eth.getBlock(933)
eth.getBlock(934)
eth.accounts
eth.coinbase == eth.accounts[0]
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
web3.fromWei(eth.getBalance(eth.accounts[0]),"ether")
eth.accounts[1]
web3.fromWei(eth.getBalance(eth.accounts[0]),"ether")
eth.accounts
eth.coinvase
eth.coinbase
eth.blocknumber
eth.blockNumber
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
web3.fromWei(eth.getBalance(eth.accounts[1]),"ether")
web3.fromWei(eth.getBalance(eth.accounts[0]),"ether")
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(5, "ether")})
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
miner.start()
miner.stop()
eth.mining
eth.hashrate
eth.getBalance(eth.accounts[1])
miner.start()
miner.stop()
eth.blockNumber
eth.getBalance(eth.accounts[1])
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
eth.sendTransaction({from: eth.accounts[1], to: eth.accounts[0], value: web3.toWei(3, "ether")})
eth.getBalance(eth.accounts[1])
miner.start()
eth.hashrate
eth.mining
eth.hashrate
eth.mining
eth.getBalance(eth.accounts[1])
miner.stop()
eth.mining
miner.start(2)
eth.mining
eth.getTransaction("0xa1a5f828fa815967d684dc5819dfaa0441b39a02f382f5792a7e3bc0df647f38")
miner.stop()
eth.mining
var bin = "608060405234801561001057600080fd5b5060df8061001f6000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360fe47b114604e5780636d4ce63c146078575b600080fd5b348015605957600080fd5b5060766004803603810190808035906020019092919050505060a0565b005b348015608357600080fd5b50608a60aa565b6040518082815260200191505060405180910390f35b8060008190555050565b600080549050905600a165627a7a723058206ba8f835e128cb3b0f46134849737ebd67c60d77678189cbec06fd6496d2cdc10029"
bin
var abi = [{"constant":false,"inputs":[{"name":"x","type":"uint256"}],"name":"set","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"retVal","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]
abi
var contract = eth.contract(abi)
var myContract = contract.new({from: eth.accounts[0], data: bin})
bin
bin = "0x608060405234801561001057600080fd5b5060df8061001f6000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360fe47b114604e5780636d4ce63c146078575b600080fd5b348015605957600080fd5b5060766004803603810190808035906020019092919050505060a0565b005b348015608357600080fd5b50608a60aa565b6040518082815260200191505060405180910390f35b8060008190555050565b600080549050905600a165627a7a723058206ba8f835e128cb3b0f46134849737ebd67c60d77678189cbec06fd6496d2cdc10029"
var myContract = contract.new({from: eth.accounts[0], data: bin})
miner.start(2)
eth.mining
myContract
myContract.abi
var cnt = eth.contract(myContract.abi).at(myContract.address)
cnt.set.sendTransaction(6,{from:eth.accounts[0]})
cnt.get()
eth.mining
miner.stop()